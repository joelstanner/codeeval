"""
Given a sequence, write a program to detect cycles within it.

INPUT SAMPLE:

Your program should accept as its first argument a path to a filename
containing a sequence of numbers (space delimited). The file can have
multiple such lines. E.g

2 0 6 3 1 6 3 1 6 3 1
3 4 8 0 11 9 7 2 5 6 10 1 49 49 49 49
1 2 3 1 2 3 1 2 3

OUTPUT SAMPLE:

Print to stdout the first cycle you find in each sequence. Ensure that
there are no trailing empty spaces on each line you print. E.g.

6 3 1
49
1 2 3

The cycle detection problem is explained more widely on wiki

Constrains:
The elements of the sequence are integers in range [0, 99]
The length of the sequence is in range [0, 50]
"""


from sys import argv


INPUT_FILE = argv[1]


def detect_cycle(input_file):
    with open(input_file, mode="r") as f:
        for line in f:
            cycle_line = [int(x) for x in line.split()]
            result = cycle_check(cycle_line)
            print((x for x in result), sep=" ")


def cycle_check(cycle_line):
    tortise = 0
    hare = 0

    while hare < len(cycle_line):
        hare += 2
        tortise += 1
        if cycle_line[tortise] == cycle_line[hare]:
            cycle_start = cycle_line[tortise]
            cycle_end = None
            cycle = []
            while cycle_line[tortise] != cycle_end:
                cycle.append(cycle_line[tortise])
                tortise += 1
                cycle_end = cycle_start
            return cycle


if __name__ == '__main__':
    detect_cycle(INPUT_FILE)
